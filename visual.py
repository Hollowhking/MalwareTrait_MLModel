import pandas as pd
import matplotlib.pyplot as plt

# Load metrics from the CSVLogger
file_path = './lightning_logs/lstm/version_0/metrics.csv'

try:
    metrics = pd.read_csv(file_path)
except FileNotFoundError:
    print(f"File not found: {file_path}")
    
else:
    #print(metrics.head())
    # Check if the required columns exist
    required_columns = ['epoch','loss']
    if all(col in metrics.columns for col in required_columns):
        # Drop NA values and reset index
        metrics = metrics.dropna(subset=required_columns).reset_index(drop=True)
        print(metrics.head())
        # Plot training and validation loss
        plt.figure(figsize=(12, 6))
        plt.plot(metrics['epoch'], metrics['loss'], label='Training Loss')
        plt.plot(metrics['epoch'], metrics['val_loss'], label='Validation Loss')
        plt.xlabel('Epoch')
        plt.ylabel('Loss')
        plt.title('Training and Validation Loss over Epochs')
        plt.legend()
        plt.grid(True)
        plt.savefig('Training_data.png')
    else:
        print(f"Missing required columns in the CSV file. Found columns: {metrics.columns}")

try:
    metrics = pd.read_csv(file_path)
except FileNotFoundError:
    print(f"File not found: {file_path}")
    
else:
    #print(metrics.head())
    # Check if the required columns exist
    required_columns = ['epoch','val_acc','val_loss']
    if all(col in metrics.columns for col in required_columns):
        # Drop NA values and reset index
        metrics = metrics.dropna(subset=required_columns).reset_index(drop=True)
        print(metrics.head())
        # Plot training and validation loss
        plt.figure(figsize=(12, 6))
        plt.plot(metrics['epoch'], metrics['val_acc'], label='Validation Accuracy')
        plt.plot(metrics['epoch'], metrics['val_loss'], label='Validation Loss')
        plt.xlabel('Epoch')
        plt.ylabel('Loss')
        plt.title('Training and Validation Loss over Epochs')
        plt.legend()
        plt.grid(True)
        plt.savefig('Accuracy.png')
    else:
        print(f"Missing required columns in the CSV file. Found columns: {metrics.columns}")


exit()
# Plot validation accuracy
plt.figure(figsize=(12, 6))
plt.plot(metrics['epoch'], metrics['val_acc'], label='Validation Accuracy')
plt.xlabel('Epoch')
plt.ylabel('Accuracy')
plt.title('Validation Accuracy over Epochs')
plt.legend()
plt.grid(True)
plt.savefig('val_acc.png')